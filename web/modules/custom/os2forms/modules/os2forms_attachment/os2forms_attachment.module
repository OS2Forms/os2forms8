<?php

/**
 * @file
 * OS2Forms Attachment functionality module.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\os2forms_attachment\Entity\AttachmentComponent;

/**
 * Implements hook_theme().
 *
 * Overriding default entity entity_print template.
 */
function os2forms_attachment_theme($existing, $type, $theme, $path) {
  return [
    'entity_print' => [
      'path' => $path . '/templates',
      'template' => 'os2forms-attachment--webform-submission',
      'variables' => [
        'title' => '',
        'content' => NULL,
        'entity_print_css' => NULL,
        'author' => NULL,
        'header' => NULL,
        'footer' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Exposing settings for general OS2forms admin settings.
 */
function os2forms_attachment_form_os2forms_settings_alter(&$form, FormStateInterface $form_state) {
  $form['third_party_settings']['webform_entity_print']['template'] = [
    '#type' => 'details',
    '#title' => t('Template'),
  ];

  os2forms_attachment_webform_admin_third_party_settings_form_alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Exposing settings for OS2forms webform settings.
 */
function os2forms_attachment_form_webform_os2forms_settings_form_alter(&$form, FormStateInterface $form_state) {
  $form['third_party_settings']['webform_entity_print']['template'] = [
    '#type' => 'details',
    '#title' => t('Template'),
  ];

  os2forms_attachment_webform_third_party_settings_form_alter($form, $form_state);
}

/**
 * Implements hook_preprocess_entity_print().
 *
 * Adds header and footer to be accessible in.
 */
function os2forms_attachment_preprocess_entity_print(array &$variables) {
  $webform_submission = _webform_entity_print_preprocess_entity_print_get_webform_submission($variables['content']);
  if (!$webform_submission) {
    return;
  }

  /** @var \Drupal\webform\WebformThirdPartySettingsManagerInterface $third_party_settings_manager */
  $third_party_settings_manager = \Drupal::service('webform.third_party_settings_manager');

  $default_template_settings = $third_party_settings_manager->getThirdPartySetting('webform_entity_print', 'template') ?: [];
  $webform_template_settings = $webform_submission->getWebform()->getThirdPartySetting('webform_entity_print', 'template') ?: [];
  $template = array_filter($webform_template_settings)
    + array_filter($default_template_settings);

  /** @var \Drupal\webform\WebformTokenManagerInterface $token_manager */
  $token_manager = \Drupal::service('webform.token_manager');

  // Adding header to the theme template.
  if (!empty($template['os2form_header'])) {
    /** @var \Drupal\os2forms_attachment\Entity\AttachmentComponent $header */
    $header = AttachmentComponent::load($template['os2form_header']);

    if ($header) {
      $headerBody = $token_manager->replace($header->getBody(), $webform_submission);
      $variables['header'] = $headerBody;

      $variables['header'] = [
        '#type' => 'container',
        '#attributes' => ['class' => ['webform-entity-print-header']],
        '#markup' => $headerBody,
      ];
    }
  }

  // Adding footer to the theme template.
  if (!empty($template['os2form_footer'])) {
    /** @var \Drupal\os2forms_attachment\Entity\AttachmentComponent $footer */
    $footer = AttachmentComponent::load($template['os2form_footer']);
    if ($footer) {
      $footerBody = $token_manager->replace($footer->getBody(), $webform_submission);

      $variables['footer'] = [
        '#type' => 'container',
        '#attributes' => ['class' => ['webform-entity-print-footer']],
        '#markup' => $footerBody,
      ];
    }
  }

  // Setting author as site name.
  $variables['author'] = \Drupal::config('system.site')->get('name');
}

/**
 * Implements hook_webform_admin_third_party_settings_form_alter().
 */
function os2forms_attachment_webform_admin_third_party_settings_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\webform\WebformThirdPartySettingsManagerInterface $third_party_settings_manager */
  $third_party_settings_manager = \Drupal::service('webform.third_party_settings_manager');
  $template_settings = $third_party_settings_manager->getThirdPartySetting('webform_entity_print', 'template') ?: [];

  _os2forms_attachment_print_form_add_template_override(
    $form['third_party_settings'],
    $template_settings
  );
}

/**
 * Implements hook_webform_third_party_settings_form_alter().
 */
function os2forms_attachment_webform_third_party_settings_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\webform\WebformInterface $webform */
  $webform = $form_state->getFormObject()->getEntity();
  $template_settings = $webform->getThirdPartySetting('webform_entity_print', 'template') ?: [];

  _os2forms_attachment_print_form_add_template_override(
    $form['third_party_settings'],
    $template_settings
  );
}

/**
 * Helper function that adds template components override options to the forms.
 *
 * @see os2forms_attachment_webform_admin_third_party_settings_form_alter()
 * @see os2forms_attachment_webform_third_party_settings_form_alter()
 */
function _os2forms_attachment_print_form_add_template_override(array &$element, array $template_settings) {
  // Getting header options.
  $header_options = ['empty' => 'No header'];

  $headerIds = \Drupal::entityQuery('os2forms_attachment_component')
    ->condition('type', 'header')
    ->execute();
  if (!empty($headerIds)) {
    $headers = AttachmentComponent::loadMultiple($headerIds);
    foreach ($headers as $header) {
      $header_options['Custom'][$header->id()] = $header->label();
    }
  }

  // Getting colophon options.
  $colophon_options = ['empty' => 'No colophon'];

  $colophonIds = \Drupal::entityQuery('os2forms_attachment_component')
    ->condition('type', 'colophon')
    ->execute();
  if (!empty($colophonIds)) {
    $colophons = AttachmentComponent::loadMultiple($colophonIds);
    foreach ($colophons as $colophon) {
      $colophon_options['Custom'][$colophon->id()] = $colophon->label();
    }
  }

  // Getting footer options.
  $footer_options = ['empty' => 'No footer'];

  $footerIds = \Drupal::entityQuery('os2forms_attachment_component')
    ->condition('type', 'footer')
    ->execute();
  if (!empty($footerIds)) {
    $footers = AttachmentComponent::loadMultiple($footerIds);
    foreach ($footers as $footer) {
      $footer_options['Custom'][$footer->id()] = $footer->label();
    }
  }
  // Template.
  $template_settings += [
    'os2forms_header' => '',
    'os2forms_colophon' => '',
    'os2forms_footer' => '',
  ];
  $element['webform_entity_print']['template']['os2form_header'] = [
    '#type' => 'select',
    '#title' => t('OS2forms header override'),
    '#options' => $header_options,
    '#description' => t('Select default header that will be used on all forms (use standard for no override)'),
    '#empty_option' => t('Use standard'),
    '#default_value' => $template_settings['os2form_header'],
    '#weight' => -1,
  ];

  $element['webform_entity_print']['template']['os2form_colophon'] = [
    '#type' => 'select',
    '#title' => t('OS2forms colophon override'),
    '#options' => $colophon_options,
    '#description' => t('Select default colophon that will be used on all forms (use standard for no override)'),
    '#empty_option' => t('Use standard'),
    '#default_value' => $template_settings['os2form_colophon'],
    '#weight' => -1,
  ];

  $element['webform_entity_print']['template']['os2form_footer'] = [
    '#type' => 'select',
    '#title' => t('OS2forms footer override'),
    '#options' => $footer_options,
    '#description' => t('Select default footer that will be used on all forms (use standard for no override)'),
    '#empty_option' => t('Use standard'),
    '#default_value' => $template_settings['os2form_footer'],
    '#weight' => 0,
  ];

  // Showing/hiding default header/footer elements based on the permission.
  $element['webform_entity_print']['template']['header']['#access'] = \Drupal::currentUser()->hasPermission('os2forms webform header footer edit');
  $element['webform_entity_print']['template']['footer']['#access'] = \Drupal::currentUser()->hasPermission('os2forms webform header footer edit');
}

/**
 * Implements hook_webform_submission_view_alter().
 */
function os2forms_attachment_webform_submission_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  $is_entity_print = in_array($route_name, [
    'entity_print.view.debug',
    'entity_print.view',
  ])
  || \Drupal::request()->request->get('_webform_entity_print');

  if ($is_entity_print) {
    // Overriding headers and footers added by webform_entity_print.
    // @see webform_entity_print_webform_admin_third_party_settings_form_alter().
    /** @var \Drupal\webform\WebformThirdPartySettingsManagerInterface $third_party_settings_manager */
    $third_party_settings_manager = \Drupal::service('webform.third_party_settings_manager');

    $default_template_settings = $third_party_settings_manager->getThirdPartySetting('webform_entity_print', 'template') ?: [];
    $webform_template_settings = $entity->getWebform()->getThirdPartySetting('webform_entity_print', 'template') ?: [];
    $template = array_filter($webform_template_settings)
      + array_filter($default_template_settings);

    /** @var \Drupal\webform\WebformTokenManagerInterface $token_manager */
    $token_manager = \Drupal::service('webform.token_manager');

    // Header and footer are set as part of the template, therefore unsetting
    // then from content build.
    // @see os2forms_attachment_preprocess_entity_print.
    unset($build['webform_entity_print_header']);
    unset($build['webform_entity_print_footer']);

    // Adding Colophon.
    if (!empty($template['os2form_colophon'])) {
      /** @var \Drupal\os2forms_attachment\Entity\AttachmentComponent $colophon */
      $colophon = AttachmentComponent::load($template['os2form_colophon']);

      if ($colophon) {
        $colophonBody = $token_manager->replace($colophon->getBody(), $entity);

        // Creating page wrapper.
        $build['webform_entity_print_wrapper'] = [
          '#type' => 'container',
          '#weight' => 19,
        ];

        // Creating colophon.
        $build['webform_entity_print_wrapper']['webform_entity_print_colophon'] = [
          '#type' => 'container',
          '#attributes' => [
            'class' => ['webform-entity-print-colophon'],
            'style' => 'float:right;width:27%;margin-left:20px;word-wrap:break-word;',
          ],
          '#markup' => $colophonBody,
        ];

        // Creating page body.
        $build['webform_entity_print_wrapper']['webform_entity_print_body'] = [
          '#type' => 'container',
          '#attributes' => [
            'class' => ['webform-entity-print-body'],
            'style' => 'width:70%;',
          ],
        ];
        // Moving all elements into body.
        $build['webform_entity_print_wrapper']['webform_entity_print_body']['data'] = $build['data'];
        unset($build['data']);
      }
    }
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function os2forms_attachment_module_implements_alter(&$implementations, $hook) {
  switch ($hook) {
    // We need to move os2forms_attachment hooks after webform_entity_print
    // hook.
    // We need that for being able to overwrite default headers/footer and third
    // party settings.
    case 'webform_submission_view_alter':
    case 'webform_third_party_settings_form_alter':
    case 'webform_admin_third_party_settings_form_alter':
      $group = $implementations['os2forms_attachment'];
      unset($implementations['os2forms_attachment']);
      $implementations['os2forms_attachment'] = $group;
      break;
  }

}
