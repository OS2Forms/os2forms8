#!/usr/bin/env bash
# Script Reloads db from server to local environment.

# Trapping CTRL-C
trap ctrl_c INT
trap ctrl_c SIGINT
trap ctrl_c SIGTERM

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

# Helper functions for console output
echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

echo-yellow "Reload db from server to local environment."

SSH_CRED=gdpr-forms01
DB_NAME=os2forms_migration_d7
DRUPAL_ROOT=/var/www/os2forms-migration-d7/public_html
DRUSH="drush"

echo-yellow "Copying db dump from server"
## @TODO This command only for development phase.
ssh $SSH_CRED "cd ${DRUPAL_ROOT} && ../vendor/bin/drush sql-dump | gzip -9 > ~/${DB_NAME}.sql.gz"
scp $SSH_CRED:$DB_NAME* ./
## To use after release.
#scp $SSH_CRED:/var/lib/mysql_backup/$DB_NAME* ./

ssh $SSH_CRED " rm ~/${DB_NAME}.sql.gz"

echo-yellow "Dropping existing local db"
fin exec "${DRUSH} sql-drop --database=migrate -y"

echo-yellow "Loading downloaded db dump"
fin exec "zcat < ${DB_NAME}.sql.gz | ${DRUSH} sqlc --database=migrate"
## To use after release.
# fin exec "zcat < ${DB_NAME}-cache-structure.sql.gz | ${DRUSH} sqlc --database=migrate"
echo-yellow "Removing db dump"
fin exec "rm ${DB_NAME}*.sql.gz"
