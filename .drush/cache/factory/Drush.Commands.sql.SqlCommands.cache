{
    "cid": "Drush\\Commands\\sql\\SqlCommands",
    "data": {
        "conf": {
            "schema": 4,
            "class": "Drush\\Commands\\sql\\SqlCommands",
            "method_name": "conf",
            "mtime": 1581269391,
            "injected_classes": [],
            "name": "sql:conf",
            "description": "Print database connection details.",
            "help": "",
            "aliases": [
                "sql-conf"
            ],
            "annotations": {
                "command": "sql:conf",
                "optionset_sql": "",
                "bootstrap": "max configuration",
                "hidden": ""
            },
            "example_usages": [],
            "return_type": null,
            "arguments": [],
            "options": {
                "format": {
                    "description": "",
                    "default": "yaml"
                },
                "all": {
                    "description": "Show all database connections, instead of just one.",
                    "default": false
                },
                "show-passwords": {
                    "description": "Show database password.",
                    "default": false
                }
            }
        },
        "connect": {
            "schema": 4,
            "class": "Drush\\Commands\\sql\\SqlCommands",
            "method_name": "connect",
            "mtime": 1581269391,
            "injected_classes": [],
            "name": "sql:connect",
            "description": "A string for connecting to the DB.",
            "help": "",
            "aliases": [
                "sql-connect"
            ],
            "annotations": {
                "command": "sql:connect",
                "optionset_sql": "",
                "bootstrap": "max configuration"
            },
            "example_usages": {
                "`drush sql-connect` \u003c example.sql": "Bash: Import SQL statements from a file into the current database.",
                "eval (drush sql-connect) \u003c example.sql": "Fish: Import SQL statements from a file into the current database."
            },
            "return_type": null,
            "arguments": [],
            "options": {
                "extra": {
                    "description": "Add custom options to the connect string (e.g. --extra=--skip-column-names)",
                    "default": 2
                }
            }
        },
        "create": {
            "schema": 4,
            "class": "Drush\\Commands\\sql\\SqlCommands",
            "method_name": "create",
            "mtime": 1581269391,
            "injected_classes": [],
            "name": "sql:create",
            "description": "Create a database.",
            "help": "",
            "aliases": [
                "sql-create"
            ],
            "annotations": {
                "command": "sql:create",
                "optionset_sql": "",
                "bootstrap": "max configuration"
            },
            "example_usages": {
                "drush sql:create": "Create the database for the current site.",
                "drush @site.test sql-create": "Create the database as specified for @site.test.",
                "drush sql:create --db-su=root --db-su-pw=rootpassword --db-url=\"mysql:\/\/drupal_db_user:drupal_db_password@127.0.0.1\/drupal_db\"": "Create the database as specified in the db-url option."
            },
            "return_type": null,
            "arguments": [],
            "options": {
                "db-su": {
                    "description": "Account to use when creating a new database.",
                    "default": 2
                },
                "db-su-pw": {
                    "description": "Password for the db-su account.",
                    "default": 2
                }
            }
        },
        "drop": {
            "schema": 4,
            "class": "Drush\\Commands\\sql\\SqlCommands",
            "method_name": "drop",
            "mtime": 1581269391,
            "injected_classes": [],
            "name": "sql:drop",
            "description": "Drop all tables in a given database.",
            "help": "",
            "aliases": [
                "sql-drop"
            ],
            "annotations": {
                "command": "sql:drop",
                "optionset_sql": "",
                "bootstrap": "max configuration",
                "topics": "docs:policy"
            },
            "example_usages": [],
            "return_type": null,
            "arguments": [],
            "options": []
        },
        "cli": {
            "schema": 4,
            "class": "Drush\\Commands\\sql\\SqlCommands",
            "method_name": "cli",
            "mtime": 1581269391,
            "injected_classes": [
                "Symfony\\Component\\Console\\Input\\InputInterface"
            ],
            "name": "sql:cli",
            "description": "Open a SQL command-line interface using Drupal's credentials.",
            "help": "",
            "aliases": [
                "sqlc",
                "sql-cli"
            ],
            "annotations": {
                "command": "sql:cli",
                "optionset_sql": "",
                "remote-tty": "",
                "bootstrap": "max configuration"
            },
            "example_usages": {
                "drush sql:cli": "Open a SQL command-line interface using Drupal's credentials.",
                "drush sql:cli --extra=--progress-reports": "Open a SQL CLI and skip reading table information.",
                "drush sql:cli \u003c example.sql": "Import sql statements from a file into the current database."
            },
            "return_type": null,
            "arguments": [],
            "options": {
                "extra": {
                    "description": "Add custom options to the connect string",
                    "default": 2
                }
            }
        },
        "query": {
            "schema": 4,
            "class": "Drush\\Commands\\sql\\SqlCommands",
            "method_name": "query",
            "mtime": 1581269391,
            "injected_classes": [],
            "name": "sql:query",
            "description": "Execute a query against a database.",
            "help": "",
            "aliases": [
                "sqlq",
                "sql-query"
            ],
            "annotations": {
                "command": "sql:query",
                "optionset_sql": "",
                "validate-file-exists": "file",
                "bootstrap": "max configuration"
            },
            "example_usages": {
                "drush sql:query \"SELECT * FROM users WHERE uid=1\"": "Browse user record. Table prefixes, if used, must be added to table names by hand.",
                "drush sql:query --db-prefix \"SELECT * FROM {users}\"": "Browse user record. Table prefixes are honored. Caution: All curly-braces will be stripped.",
                "`drush sql-connect` \u003c example.sql": "Import sql statements from a file into the current database.",
                "drush sql:query --file=example.sql": "Alternate way to import sql statements from a file."
            },
            "return_type": null,
            "arguments": {
                "query": {
                    "description": "An SQL query. Ignored if --file is provided.",
                    "default": ""
                }
            },
            "options": {
                "result-file": {
                    "description": "Save to a file. The file should be relative to Drupal root."
                },
                "file": {
                    "description": "Path to a file containing the SQL to be run. Gzip files are accepted.",
                    "default": 2
                },
                "file-delete": {
                    "description": "Delete the --file after running it.",
                    "default": false
                },
                "extra": {
                    "description": "Add custom options to the connect string (e.g. --extra=--skip-column-names)",
                    "default": 2
                },
                "db-prefix": {
                    "description": "Enable replacement of braces in your query.",
                    "default": false
                }
            }
        },
        "dump": {
            "schema": 4,
            "class": "Drush\\Commands\\sql\\SqlCommands",
            "method_name": "dump",
            "mtime": 1581269391,
            "injected_classes": [],
            "name": "sql:dump",
            "description": "Exports the Drupal DB as SQL using mysqldump or equivalent.",
            "help": "",
            "aliases": [
                "sql-dump"
            ],
            "annotations": {
                "command": "sql:dump",
                "optionset_sql": "",
                "optionset_table_selection": "",
                "hidden-options": "create-db",
                "bootstrap": "max configuration",
                "field-labels": "\n   path: Path",
                "notes": "\n   createdb is used by sql-sync, since including the DROP TABLE statements interfere with the import when the database is created."
            },
            "example_usages": {
                "drush sql:dump --result-file=..\/18.sql": "Save SQL dump to the directory above Drupal root.",
                "drush sql:dump --skip-tables-key=common": "Skip standard tables. @see example.drush.yml",
                "drush sql:dump --extra-dump=--no-data": "Pass extra option to mysqldump command."
            },
            "return_type": "\\Consolidation\\OutputFormatters\\StructuredData\\PropertyList",
            "arguments": [],
            "options": {
                "result-file": {
                    "description": "Save to a file. The file should be relative to Drupal root. If --result-file is provided with the value 'auto', a date-based filename will be created under ~\/drush-backups directory.",
                    "default": 2
                },
                "create-db": {
                    "description": "Omit DROP TABLE statements. Used by Postgres and Oracle only.",
                    "default": false
                },
                "data-only": {
                    "description": "Dump data without statements to create any of the schema.",
                    "default": false
                },
                "ordered-dump": {
                    "description": "Order by primary key and add line breaks for efficient diffs. Slows down the dump. Mysql only.",
                    "default": false
                },
                "gzip": {
                    "description": "Compress the dump using the gzip program which must be in your $PATH.",
                    "default": false
                },
                "extra": {
                    "description": "Add custom arguments\/options when connecting to database (used internally to list tables).",
                    "default": 2
                },
                "extra-dump": {
                    "description": "Add custom arguments\/options to the dumping of the database (e.g. mysqldump command).",
                    "default": 2
                },
                "format": {
                    "description": "",
                    "default": "null"
                }
            }
        },
        "validate": {
            "schema": 4,
            "class": "Drush\\Commands\\sql\\SqlCommands",
            "method_name": "validate",
            "mtime": 1581269391,
            "injected_classes": [
                "Consolidation\\AnnotatedCommand\\CommandData"
            ],
            "name": "validate",
            "description": "Assert that `mysql` or similar are on the user's PATH.",
            "help": "",
            "aliases": [],
            "annotations": {
                "hook": "validate",
                "throws": "\\Exception"
            },
            "example_usages": [],
            "return_type": "Drush\\Commands\\sql\\bool",
            "arguments": {
                "commandData": {
                    "description": ""
                }
            },
            "options": []
        },
        "setProcessManager": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setProcessManager",
            "mtime": 1568138184,
            "injected_classes": []
        },
        "processManager": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "processManager",
            "mtime": 1568138184,
            "injected_classes": []
        },
        "hasProcessManager": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "hasProcessManager",
            "mtime": 1568138184,
            "injected_classes": []
        },
        "setLogger": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setLogger",
            "mtime": 1584954725,
            "injected_classes": []
        },
        "getConfig": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "getConfig",
            "mtime": 1581269391,
            "injected_classes": []
        },
        "setConfig": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setConfig",
            "mtime": 1582047086,
            "injected_classes": []
        },
        "parentgetconfig": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "parentgetconfig",
            "mtime": 1582047086,
            "injected_classes": []
        },
        "setInput": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setInput",
            "mtime": 1582047086,
            "injected_classes": []
        },
        "setOutput": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setOutput",
            "mtime": 1582047086,
            "injected_classes": []
        },
        "startBrowser": {
            "schema": 4,
            "class": "Drush\\Commands\\sql\\SqlCommands",
            "method_name": "startBrowser",
            "mtime": 1581269391,
            "injected_classes": []
        },
        "setStdinHandler": {
            "schema": 4,
            "class": "Drush\\Commands\\sql\\SqlCommands",
            "method_name": "setStdinHandler",
            "mtime": 1552064103,
            "injected_classes": []
        },
        "stdin": {
            "schema": 4,
            "class": "Drush\\Commands\\sql\\SqlCommands",
            "method_name": "stdin",
            "mtime": 1552064103,
            "injected_classes": []
        }
    },
    "created": 1599741432,
    "expire": 0
}