{
    "cid": "Drush\\Commands\\core\\RunserverCommands",
    "data": {
        "runserver": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\RunserverCommands",
            "method_name": "runserver",
            "mtime": 1581269391,
            "injected_classes": [],
            "name": "runserver",
            "description": "Runs PHP's built-in http server for development.",
            "help": "- Don't use this for production, it is neither scalable nor secure for this use.\n- If you run multiple servers simultaneously, you will need to assign each a unique port.\n- Use Ctrl-C or equivalent to stop the server when complete.",
            "aliases": [
                "rs",
                "serve"
            ],
            "annotations": {
                "command": "runserver",
                "bootstrap": "full"
            },
            "example_usages": {
                "drush rs 8080": "Start a web server on 127.0.0.1, port 8080.",
                "drush rs 10.0.0.28:80": "Start runserver on 10.0.0.28, port 80.",
                "drush rs [::1]:80": "Start runserver on IPv6 localhost ::1, port 80.",
                "drush rs --dns localhost:8888\/user": "Start runserver on localhost (using rDNS to determine binding IP), port 8888, and open \/user in browser.",
                "drush rs \/": "Start runserver on default IP\/port (127.0.0.1, port 8888), and open \/ in browser.",
                "drush rs --default-server=127.0.0.1:8080\/ -": "Use a default (would be specified in your drushrc) that starts runserver on port 8080, and opens a browser to the front page. Set path to a single hyphen path in argument to prevent opening browser for this session.",
                "drush rs :9000\/admin": "Start runserver on 127.0.0.1, port 9000, and open \/admin in browser. Note that you need a colon when you specify port and path, but no IP.",
                "drush --quiet rs": "Silence logging the printing of web requests to the console."
            },
            "return_type": null,
            "arguments": {
                "uri": {
                    "description": "Host IP address and port number to bind to and path to open in web browser. Format is addr:port\/path. Only opens a browser if a path is specified.",
                    "default": null
                }
            },
            "options": {
                "default-server": {
                    "description": "A default addr:port\/path to use for any values not specified as an argument.",
                    "default": 2
                },
                "browser": {
                    "description": "If opening a web browser, which browser to use (defaults to operating system default). Use --no-browser to avoid opening a browser.",
                    "default": true
                },
                "dns": {
                    "description": "Resolve hostnames\/IPs using DNS\/rDNS (if possible) to determine binding IPs and\/or human friendly hostnames for URLs and browser.",
                    "default": false
                }
            }
        },
        "uri": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\RunserverCommands",
            "method_name": "uri",
            "mtime": 1581269391,
            "injected_classes": []
        },
        "parseUri": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\RunserverCommands",
            "method_name": "parseUri",
            "mtime": 1581269391,
            "injected_classes": []
        },
        "setProcessManager": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setProcessManager",
            "mtime": 1568138184,
            "injected_classes": []
        },
        "processManager": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "processManager",
            "mtime": 1568138184,
            "injected_classes": []
        },
        "hasProcessManager": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "hasProcessManager",
            "mtime": 1568138184,
            "injected_classes": []
        },
        "setLogger": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setLogger",
            "mtime": 1584954725,
            "injected_classes": []
        },
        "getConfig": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "getConfig",
            "mtime": 1581269391,
            "injected_classes": []
        },
        "setConfig": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setConfig",
            "mtime": 1582047086,
            "injected_classes": []
        },
        "parentgetconfig": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "parentgetconfig",
            "mtime": 1582047086,
            "injected_classes": []
        },
        "setInput": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setInput",
            "mtime": 1582047086,
            "injected_classes": []
        },
        "setOutput": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setOutput",
            "mtime": 1582047086,
            "injected_classes": []
        },
        "startBrowser": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\RunserverCommands",
            "method_name": "startBrowser",
            "mtime": 1581269391,
            "injected_classes": []
        }
    },
    "created": 1599741432,
    "expire": 0
}