{
    "cid": "Drush\\Commands\\core\\RsyncCommands",
    "data": {
        "rsync": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\RsyncCommands",
            "method_name": "rsync",
            "mtime": 1581269391,
            "injected_classes": [],
            "name": "core:rsync",
            "description": "Rsync Drupal code or files to\/from another server using ssh.",
            "help": "",
            "aliases": [
                "rsync",
                "core-rsync"
            ],
            "annotations": {
                "command": "core:rsync",
                "optionset_ssh": "",
                "topics": "docs:aliases"
            },
            "example_usages": {
                "drush rsync @dev @stage": "Rsync Drupal root from Drush alias dev to the alias stage.",
                "drush rsync .\/ @stage:%files\/img": "Rsync all files in the current directory to the 'img' directory in the file storage folder on the Drush alias stage.",
                "drush rsync @dev @stage -- --exclude=*.sql --delete": "Rsync Drupal root from the Drush alias dev to the alias stage, excluding all .sql files and delete all files on the destination that are no longer on the source.",
                "drush rsync @dev @stage --ssh-options=\"-o StrictHostKeyChecking=no\" -- --delete": "Customize how rsync connects with remote host via SSH. rsync options like --delete are placed after a --."
            },
            "return_type": null,
            "arguments": {
                "source": {
                    "description": "A site alias and optional path. See rsync documentation and example.site.yml."
                },
                "target": {
                    "description": "A site alias and optional path. See rsync documentation and example.site.yml.',"
                },
                "extra": {
                    "description": "Additional parameters after the ssh statement.",
                    "default": []
                }
            },
            "options": {
                "exclude-paths": {
                    "description": "List of paths to exclude, seperated by : (Unix-based systems) or ; (Windows).",
                    "default": 2
                },
                "include-paths": {
                    "description": "List of paths to include, seperated by : (Unix-based systems) or ; (Windows).",
                    "default": 2
                },
                "mode": {
                    "description": "The unary flags to pass to rsync; --mode=rultz implies rsync -rultz. Default is -akz.",
                    "default": "akz"
                }
            }
        },
        "rsyncOptions": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\RsyncCommands",
            "method_name": "rsyncOptions",
            "mtime": 1581269391,
            "injected_classes": []
        },
        "preCommandEvent": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\RsyncCommands",
            "method_name": "preCommandEvent",
            "mtime": 1581269391,
            "injected_classes": [
                "Symfony\\Component\\Console\\Event\\ConsoleCommandEvent"
            ],
            "name": "pre:command-event",
            "description": "Evaluate the path aliases in the source and destination parameters. We do this in the pre-command-event so that we can set up the configuration object to include options from the source and target aliases, if any, so that these values may participate in configuration injection.",
            "help": "",
            "aliases": [],
            "annotations": {
                "hook": "command-event core:rsync",
                "throws": "\\Exception"
            },
            "example_usages": [],
            "return_type": "Drush\\Commands\\core\\void",
            "arguments": {
                "event": {
                    "description": ""
                }
            },
            "options": []
        },
        "validate": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\RsyncCommands",
            "method_name": "validate",
            "mtime": 1581269391,
            "injected_classes": [
                "Consolidation\\AnnotatedCommand\\CommandData"
            ],
            "name": "validate",
            "description": "Validate that passed aliases are valid.",
            "help": "",
            "aliases": [],
            "annotations": {
                "hook": "validate core-rsync",
                "throws": "\\Exception"
            },
            "example_usages": [],
            "return_type": "Drush\\Commands\\core\\void",
            "arguments": {
                "commandData": {
                    "description": ""
                }
            },
            "options": []
        },
        "setProcessManager": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setProcessManager",
            "mtime": 1568138184,
            "injected_classes": []
        },
        "processManager": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "processManager",
            "mtime": 1568138184,
            "injected_classes": []
        },
        "hasProcessManager": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "hasProcessManager",
            "mtime": 1568138184,
            "injected_classes": []
        },
        "setLogger": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setLogger",
            "mtime": 1584954725,
            "injected_classes": []
        },
        "getConfig": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "getConfig",
            "mtime": 1581269391,
            "injected_classes": []
        },
        "setConfig": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setConfig",
            "mtime": 1582047086,
            "injected_classes": []
        },
        "parentgetconfig": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "parentgetconfig",
            "mtime": 1582047086,
            "injected_classes": []
        },
        "setInput": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setInput",
            "mtime": 1582047086,
            "injected_classes": []
        },
        "setOutput": {
            "schema": 4,
            "class": "Drush\\Commands\\DrushCommands",
            "method_name": "setOutput",
            "mtime": 1582047086,
            "injected_classes": []
        },
        "setSiteAliasManager": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\RsyncCommands",
            "method_name": "setSiteAliasManager",
            "mtime": 1552411908,
            "injected_classes": []
        },
        "siteAliasManager": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\RsyncCommands",
            "method_name": "siteAliasManager",
            "mtime": 1552411908,
            "injected_classes": []
        },
        "hasSiteAliasManager": {
            "schema": 4,
            "class": "Drush\\Commands\\core\\RsyncCommands",
            "method_name": "hasSiteAliasManager",
            "mtime": 1552411908,
            "injected_classes": []
        }
    },
    "created": 1599741432,
    "expire": 0
}